# -*- mode: Snakemake -*-
# Quality Processing: BLAT

rule post_align:
  input:
    sampleR1=RUN_DIR + "/process_data/{sample}.R1.psl.gz",
    sampleR2=RUN_DIR + "/process_data/{sample}.R2.psl.gz",
    keyR1=RUN_DIR + "/process_data/{sample}.R1.key.csv",
    keyR2=RUN_DIR + "/process_data/{sample}.R2.key.csv"
  output:
    uniq=temp(RUN_DIR + "/process_data/{sample}.uniq.csv"),
    chimera=RUN_DIR + "/process_data/{sample}.chimera.rds",
    multihit=RUN_DIR + "/process_data/{sample}.multihits.rds",
    stat=temp(RUN_DIR + "/process_data/{sample}.align.stat")
  params:
    tool=ROOT_DIR + "/tools/rscripts/couple.R",
    ref=config["Ref_Genome"],
    start=config["maxAlignStart"],
    pct=config["minPercentIdentity"],
    minLen=config["minTempLength"],
    maxLen=config["maxTempLength"]
  log:
    RUN_DIR + "/logs/{sample}.couple.log"
  resources:
    mem_mb=lambda wildcards, attempt: attempt * config["coupleMB"]
  shell:
    """
    Rscript {params.tool} {input.sampleR2} {input.sampleR1} \
      -k {input.keyR2} {input.keyR1} -o {output.uniq} \
      --chimera {output.chimera} --multihit {output.multihit} -g {params.ref} \
      --maxAlignStart {params.start} --minPercentIdentity {params.pct} \
      --minTempLength {params.minLen} --maxTempLength {params.maxLen} \
      --stat {output.stat} > {log} 2>&1
    """

